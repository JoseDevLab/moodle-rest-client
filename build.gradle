plugins {
	id 'java-library'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.moodle.api.client'
version = '0.0.1'
description = 'Moodle Rest Client Library'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

ext {
	mapstructVersion = '1.5.5.Final'
}

compileJava {
	options.compilerArgs.add("-Amapstruct.defaultComponentModel=spring")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-web:2.7.18') {
		// Excluir Tomcat ya que la aplicación principal lo proporciona
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
		// Excluir logging que será proporcionado por la aplicación principal
		exclude group: 'ch.qos.logback', module: 'logback-classic'
		exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// Agregar SLF4J explícitamente ya que excluimos spring-boot-starter-logging
	implementation 'org.slf4j:slf4j-api:1.7.36'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Deshabilitar bootJar ya que es una librería, no una aplicación ejecutable
tasks.named('bootJar') {
	enabled = false
}

// Crear un jar normal estándar
jar {
	archiveBaseName = 'moodle-rest-client'
	archiveVersion = '0.0.1'
	archiveClassifier = ''
}
